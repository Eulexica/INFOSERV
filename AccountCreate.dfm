object dmAccountCreate: TdmAccountCreate
  OldCreateOrder = False
  OnCreate = DataModuleCreate
  OnDestroy = DataModuleDestroy
  Height = 173
  Width = 233
  object qryAccount: TUniQuery
    UpdatingTable = 'INVOICE'
    KeyFields = 'ninvoice'
    SQLInsert.Strings = (
      'INSERT INTO INVOICE'
      
        '  (NINVOICE, ACCT, TYPE, CREDITOR, NCREDITOR, NCHEQUE, NTRANS, R' +
        'EFNO, DESCR, INVOICE_DATE, DUE_DATE, DISCOUNT_DATE, PAY_DATE, HO' +
        'LD, LAST_PAYMENT, BILLED, AMOUNT, CREDITED, DISCOUNT_RATE, OWING' +
        ', TAX, LEGAL_CR_AMOUNT, TRADE_CR_AMOUNT, CHEQUE_GROUP_ID, SYSTEM' +
        'DATE, CURRENCY, TRANS_CURRENCY, TRANS_AMOUNT, FX_RATE, BASE_CCY_' +
        'TAX, BASE_CCY_OWING, BASE_CCY_LEGAL_AMT, BASE_CCY_TRADE_AMT, MOD' +
        '_DATE, MOD_BY, LEGAL_CR_AMOUNT_OWING, TRADE_CR_AMOUNT_OWING)'
      'VALUES'
      
        '  (:NINVOICE, :ACCT, :TYPE, :CREDITOR, :NCREDITOR, :NCHEQUE, :NT' +
        'RANS, :REFNO, :DESCR, :INVOICE_DATE, :DUE_DATE, :DISCOUNT_DATE, ' +
        ':PAY_DATE, :HOLD, :LAST_PAYMENT, :BILLED, :AMOUNT, :CREDITED, :D' +
        'ISCOUNT_RATE, :OWING, :TAX, :LEGAL_CR_AMOUNT, :TRADE_CR_AMOUNT, ' +
        ':CHEQUE_GROUP_ID, :SYSTEMDATE, :CURRENCY, :TRANS_CURRENCY, :TRAN' +
        'S_AMOUNT, :FX_RATE, :BASE_CCY_TAX, :BASE_CCY_OWING, :BASE_CCY_LE' +
        'GAL_AMT, :BASE_CCY_TRADE_AMT, :MOD_DATE, :MOD_BY, :LEGAL_CR_AMOU' +
        'NT_OWING, :TRADE_CR_AMOUNT_OWING)')
    SQLDelete.Strings = (
      'DELETE FROM INVOICE'
      'WHERE'
      '  NINVOICE = :Old_NINVOICE')
    SQLUpdate.Strings = (
      'UPDATE INVOICE'
      'SET'
      
        '  NINVOICE = :NINVOICE, ACCT = :ACCT, TYPE = :TYPE, CREDITOR = :' +
        'CREDITOR, NCREDITOR = :NCREDITOR, NCHEQUE = :NCHEQUE, NTRANS = :' +
        'NTRANS, REFNO = :REFNO, DESCR = :DESCR, INVOICE_DATE = :INVOICE_' +
        'DATE, DUE_DATE = :DUE_DATE, DISCOUNT_DATE = :DISCOUNT_DATE, PAY_' +
        'DATE = :PAY_DATE, HOLD = :HOLD, LAST_PAYMENT = :LAST_PAYMENT, BI' +
        'LLED = :BILLED, AMOUNT = :AMOUNT, CREDITED = :CREDITED, DISCOUNT' +
        '_RATE = :DISCOUNT_RATE, OWING = :OWING, TAX = :TAX, LEGAL_CR_AMO' +
        'UNT = :LEGAL_CR_AMOUNT, TRADE_CR_AMOUNT = :TRADE_CR_AMOUNT, CHEQ' +
        'UE_GROUP_ID = :CHEQUE_GROUP_ID, SYSTEMDATE = :SYSTEMDATE, CURREN' +
        'CY = :CURRENCY, TRANS_CURRENCY = :TRANS_CURRENCY, TRANS_AMOUNT =' +
        ' :TRANS_AMOUNT, FX_RATE = :FX_RATE, BASE_CCY_TAX = :BASE_CCY_TAX' +
        ', BASE_CCY_OWING = :BASE_CCY_OWING, BASE_CCY_LEGAL_AMT = :BASE_C' +
        'CY_LEGAL_AMT, BASE_CCY_TRADE_AMT = :BASE_CCY_TRADE_AMT, MOD_DATE' +
        ' = :MOD_DATE, MOD_BY = :MOD_BY, LEGAL_CR_AMOUNT_OWING = :LEGAL_C' +
        'R_AMOUNT_OWING, TRADE_CR_AMOUNT_OWING = :TRADE_CR_AMOUNT_OWING'
      'WHERE'
      '  NINVOICE = :Old_NINVOICE')
    SQLLock.Strings = (
      
        'SELECT NINVOICE, ACCT, TYPE, CREDITOR, NCREDITOR, NCHEQUE, NTRAN' +
        'S, REFNO, DESCR, INVOICE_DATE, DUE_DATE, DISCOUNT_DATE, PAY_DATE' +
        ', HOLD, LAST_PAYMENT, BILLED, AMOUNT, CREDITED, DISCOUNT_RATE, O' +
        'WING, TAX, LEGAL_CR_AMOUNT, TRADE_CR_AMOUNT, CHEQUE_GROUP_ID, SY' +
        'STEMDATE, CURRENCY, TRANS_CURRENCY, TRANS_AMOUNT, FX_RATE, BASE_' +
        'CCY_TAX, BASE_CCY_OWING, BASE_CCY_LEGAL_AMT, BASE_CCY_TRADE_AMT,' +
        ' MOD_DATE, MOD_BY, LEGAL_CR_AMOUNT_OWING, TRADE_CR_AMOUNT_OWING ' +
        'FROM INVOICE'
      'WHERE'
      '  NINVOICE = :Old_NINVOICE'
      'FOR UPDATE NOWAIT')
    SQLRefresh.Strings = (
      
        'SELECT NINVOICE, ACCT, TYPE, CREDITOR, NCREDITOR, NCHEQUE, NTRAN' +
        'S, REFNO, DESCR, INVOICE_DATE, DUE_DATE, DISCOUNT_DATE, PAY_DATE' +
        ', HOLD, LAST_PAYMENT, BILLED, AMOUNT, CREDITED, DISCOUNT_RATE, O' +
        'WING, TAX, LEGAL_CR_AMOUNT, TRADE_CR_AMOUNT, CHEQUE_GROUP_ID, SY' +
        'STEMDATE, CURRENCY, TRANS_CURRENCY, TRANS_AMOUNT, FX_RATE, BASE_' +
        'CCY_TAX, BASE_CCY_OWING, BASE_CCY_LEGAL_AMT, BASE_CCY_TRADE_AMT,' +
        ' MOD_DATE, MOD_BY, LEGAL_CR_AMOUNT_OWING, TRADE_CR_AMOUNT_OWING ' +
        'FROM INVOICE'
      'WHERE'
      '  NINVOICE = :Old_NINVOICE')
    SQLRecCount.Strings = (
      'SELECT Count(*) FROM ('
      'SELECT * FROM INVOICE'
      ''
      ')')
    Connection = InsightiTrackWatcher.uniInsight
    SQL.Strings = (
      'SELECT I.*, I.ROWID '
      'FROM INVOICE I '
      'WHERE I.NCHEQUE = -1')
    CachedUpdates = True
    Left = 27
    Top = 20
  end
  object qryAllocs: TUniQuery
    UpdatingTable = 'ALLOC'
    KeyFields = 'nalloc'
    SQLInsert.Strings = (
      'INSERT INTO ALLOC'
      
        '  (NALLOC, BANK, DESCR, NCHEQUE, APPROVAL, NRECEIPT, CLEARED, DC' +
        'LEARDATE, CREATED, ACCT, NMATTER, REFNO, TYPE, NCLIENT, NJOURNAL' +
        ', PAYER, TRUST, BILLED, FILEID, NTRANS, CLIENT_NAME, SYSTEM_DATE' +
        ', MATTER_DESC, OVERDRAWN, DISB_ONLY, PRIVATE, TAXCODE, SUNDRYTYP' +
        'E, DISBTEXT, NINVOICE, UPCRED, PMNT_TO_UPCRED, ANTD, AMOUNT, FEE' +
        ', OUTLAY, SUNDRY, TAX, PRIORBALANCE, DISB_CRDIT, ANTD_CRDIT, FEE' +
        'S_CRDIT, TAX_CRDIT, DISB, NCHEQREQ, MODBY, MOD_DATE, MOD_DESCR, ' +
        'STATUS, NINVOICE_PAID, JOURNALTYPE, TRUST_JNL_DESCR, BILLED_AMOU' +
        'NT, BILLED_TAX_AMOUNT, CURRENCY, TRANS_CURRENCY, TRANS_AMOUNT, F' +
        'X_RATE, BASE_CCY_UPCRED, BASE_CCY_PMNT_TO_UPCRED, BASE_CCY_ANTD,' +
        ' BASE_CCY_AMT, BASE_CCY_FEE, BASE_CCY_OUTLAY, BASE_CCY_SUNDRY, B' +
        'ASE_CCY_SPEC_PURPOSE, BASE_CCY_TAX, BASE_CCY_DISB_CRDIT, BASE_CC' +
        'Y_ANTD_CRDIT, BASE_CCY_FEES_CRDIT, BASE_CCY_TAX_CRDIT, BASE_CCY_' +
        'DISB)'
      'VALUES'
      
        '  (:NALLOC, :BANK, :DESCR, :NCHEQUE, :APPROVAL, :NRECEIPT, :CLEA' +
        'RED, :DCLEARDATE, :CREATED, :ACCT, :NMATTER, :REFNO, :TYPE, :NCL' +
        'IENT, :NJOURNAL, :PAYER, :TRUST, :BILLED, :FILEID, :NTRANS, :CLI' +
        'ENT_NAME, :SYSTEM_DATE, :MATTER_DESC, :OVERDRAWN, :DISB_ONLY, :P' +
        'RIVATE, :TAXCODE, :SUNDRYTYPE, :DISBTEXT, :NINVOICE, :UPCRED, :P' +
        'MNT_TO_UPCRED, :ANTD, :AMOUNT, :FEE, :OUTLAY, :SUNDRY, :TAX, :PR' +
        'IORBALANCE, :DISB_CRDIT, :ANTD_CRDIT, :FEES_CRDIT, :TAX_CRDIT, :' +
        'DISB, :NCHEQREQ, :MODBY, :MOD_DATE, :MOD_DESCR, :STATUS, :NINVOI' +
        'CE_PAID, :JOURNALTYPE, :TRUST_JNL_DESCR, :BILLED_AMOUNT, :BILLED' +
        '_TAX_AMOUNT, :CURRENCY, :TRANS_CURRENCY, :TRANS_AMOUNT, :FX_RATE' +
        ', :BASE_CCY_UPCRED, :BASE_CCY_PMNT_TO_UPCRED, :BASE_CCY_ANTD, :B' +
        'ASE_CCY_AMT, :BASE_CCY_FEE, :BASE_CCY_OUTLAY, :BASE_CCY_SUNDRY, ' +
        ':BASE_CCY_SPEC_PURPOSE, :BASE_CCY_TAX, :BASE_CCY_DISB_CRDIT, :BA' +
        'SE_CCY_ANTD_CRDIT, :BASE_CCY_FEES_CRDIT, :BASE_CCY_TAX_CRDIT, :B' +
        'ASE_CCY_DISB)')
    SQLDelete.Strings = (
      'DELETE FROM ALLOC'
      'WHERE'
      '  NALLOC = :Old_NALLOC')
    SQLUpdate.Strings = (
      'UPDATE ALLOC'
      'SET'
      
        '  NALLOC = :NALLOC, BANK = :BANK, DESCR = :DESCR, NCHEQUE = :NCH' +
        'EQUE, APPROVAL = :APPROVAL, NRECEIPT = :NRECEIPT, CLEARED = :CLE' +
        'ARED, DCLEARDATE = :DCLEARDATE, CREATED = :CREATED, ACCT = :ACCT' +
        ', NMATTER = :NMATTER, REFNO = :REFNO, TYPE = :TYPE, NCLIENT = :N' +
        'CLIENT, NJOURNAL = :NJOURNAL, PAYER = :PAYER, TRUST = :TRUST, BI' +
        'LLED = :BILLED, FILEID = :FILEID, NTRANS = :NTRANS, CLIENT_NAME ' +
        '= :CLIENT_NAME, SYSTEM_DATE = :SYSTEM_DATE, MATTER_DESC = :MATTE' +
        'R_DESC, OVERDRAWN = :OVERDRAWN, DISB_ONLY = :DISB_ONLY, PRIVATE ' +
        '= :PRIVATE, TAXCODE = :TAXCODE, SUNDRYTYPE = :SUNDRYTYPE, DISBTE' +
        'XT = :DISBTEXT, NINVOICE = :NINVOICE, UPCRED = :UPCRED, PMNT_TO_' +
        'UPCRED = :PMNT_TO_UPCRED, ANTD = :ANTD, AMOUNT = :AMOUNT, FEE = ' +
        ':FEE, OUTLAY = :OUTLAY, SUNDRY = :SUNDRY, TAX = :TAX, PRIORBALAN' +
        'CE = :PRIORBALANCE, DISB_CRDIT = :DISB_CRDIT, ANTD_CRDIT = :ANTD' +
        '_CRDIT, FEES_CRDIT = :FEES_CRDIT, TAX_CRDIT = :TAX_CRDIT, DISB =' +
        ' :DISB, NCHEQREQ = :NCHEQREQ, MODBY = :MODBY, MOD_DATE = :MOD_DA' +
        'TE, MOD_DESCR = :MOD_DESCR, STATUS = :STATUS, NINVOICE_PAID = :N' +
        'INVOICE_PAID, JOURNALTYPE = :JOURNALTYPE, TRUST_JNL_DESCR = :TRU' +
        'ST_JNL_DESCR, BILLED_AMOUNT = :BILLED_AMOUNT, BILLED_TAX_AMOUNT ' +
        '= :BILLED_TAX_AMOUNT, CURRENCY = :CURRENCY, TRANS_CURRENCY = :TR' +
        'ANS_CURRENCY, TRANS_AMOUNT = :TRANS_AMOUNT, FX_RATE = :FX_RATE, ' +
        'BASE_CCY_UPCRED = :BASE_CCY_UPCRED, BASE_CCY_PMNT_TO_UPCRED = :B' +
        'ASE_CCY_PMNT_TO_UPCRED, BASE_CCY_ANTD = :BASE_CCY_ANTD, BASE_CCY' +
        '_AMT = :BASE_CCY_AMT, BASE_CCY_FEE = :BASE_CCY_FEE, BASE_CCY_OUT' +
        'LAY = :BASE_CCY_OUTLAY, BASE_CCY_SUNDRY = :BASE_CCY_SUNDRY, BASE' +
        '_CCY_SPEC_PURPOSE = :BASE_CCY_SPEC_PURPOSE, BASE_CCY_TAX = :BASE' +
        '_CCY_TAX, BASE_CCY_DISB_CRDIT = :BASE_CCY_DISB_CRDIT, BASE_CCY_A' +
        'NTD_CRDIT = :BASE_CCY_ANTD_CRDIT, BASE_CCY_FEES_CRDIT = :BASE_CC' +
        'Y_FEES_CRDIT, BASE_CCY_TAX_CRDIT = :BASE_CCY_TAX_CRDIT, BASE_CCY' +
        '_DISB = :BASE_CCY_DISB'
      'WHERE'
      '  NALLOC = :Old_NALLOC')
    SQLLock.Strings = (
      
        'SELECT NALLOC, BANK, DESCR, NCHEQUE, APPROVAL, NRECEIPT, CLEARED' +
        ', DCLEARDATE, CREATED, ACCT, NMATTER, REFNO, TYPE, NCLIENT, NJOU' +
        'RNAL, PAYER, TRUST, BILLED, FILEID, NTRANS, CLIENT_NAME, SYSTEM_' +
        'DATE, MATTER_DESC, OVERDRAWN, DISB_ONLY, PRIVATE, TAXCODE, SUNDR' +
        'YTYPE, DISBTEXT, NINVOICE, UPCRED, PMNT_TO_UPCRED, ANTD, AMOUNT,' +
        ' FEE, OUTLAY, SUNDRY, TAX, PRIORBALANCE, DISB_CRDIT, ANTD_CRDIT,' +
        ' FEES_CRDIT, TAX_CRDIT, DISB, NCHEQREQ, MODBY, MOD_DATE, MOD_DES' +
        'CR, STATUS, NINVOICE_PAID, JOURNALTYPE, TRUST_JNL_DESCR, BILLED_' +
        'AMOUNT, BILLED_TAX_AMOUNT, CURRENCY, TRANS_CURRENCY, TRANS_AMOUN' +
        'T, FX_RATE, BASE_CCY_UPCRED, BASE_CCY_PMNT_TO_UPCRED, BASE_CCY_A' +
        'NTD, BASE_CCY_AMT, BASE_CCY_FEE, BASE_CCY_OUTLAY, BASE_CCY_SUNDR' +
        'Y, BASE_CCY_SPEC_PURPOSE, BASE_CCY_TAX, BASE_CCY_DISB_CRDIT, BAS' +
        'E_CCY_ANTD_CRDIT, BASE_CCY_FEES_CRDIT, BASE_CCY_TAX_CRDIT, BASE_' +
        'CCY_DISB FROM ALLOC'
      'WHERE'
      '  NALLOC = :Old_NALLOC'
      'FOR UPDATE NOWAIT')
    SQLRefresh.Strings = (
      
        'SELECT NALLOC, BANK, DESCR, NCHEQUE, APPROVAL, NRECEIPT, CLEARED' +
        ', DCLEARDATE, CREATED, ACCT, NMATTER, REFNO, TYPE, NCLIENT, NJOU' +
        'RNAL, PAYER, TRUST, BILLED, FILEID, NTRANS, CLIENT_NAME, SYSTEM_' +
        'DATE, MATTER_DESC, OVERDRAWN, DISB_ONLY, PRIVATE, TAXCODE, SUNDR' +
        'YTYPE, DISBTEXT, NINVOICE, UPCRED, PMNT_TO_UPCRED, ANTD, AMOUNT,' +
        ' FEE, OUTLAY, SUNDRY, TAX, PRIORBALANCE, DISB_CRDIT, ANTD_CRDIT,' +
        ' FEES_CRDIT, TAX_CRDIT, DISB, NCHEQREQ, MODBY, MOD_DATE, MOD_DES' +
        'CR, STATUS, NINVOICE_PAID, JOURNALTYPE, TRUST_JNL_DESCR, BILLED_' +
        'AMOUNT, BILLED_TAX_AMOUNT, CURRENCY, TRANS_CURRENCY, TRANS_AMOUN' +
        'T, FX_RATE, BASE_CCY_UPCRED, BASE_CCY_PMNT_TO_UPCRED, BASE_CCY_A' +
        'NTD, BASE_CCY_AMT, BASE_CCY_FEE, BASE_CCY_OUTLAY, BASE_CCY_SUNDR' +
        'Y, BASE_CCY_SPEC_PURPOSE, BASE_CCY_TAX, BASE_CCY_DISB_CRDIT, BAS' +
        'E_CCY_ANTD_CRDIT, BASE_CCY_FEES_CRDIT, BASE_CCY_TAX_CRDIT, BASE_' +
        'CCY_DISB FROM ALLOC'
      'WHERE'
      '  NALLOC = :Old_NALLOC')
    SQLRecCount.Strings = (
      'SELECT Count(*) FROM ('
      'SELECT * FROM ALLOC'
      ''
      ')')
    Connection = InsightiTrackWatcher.uniInsight
    SQL.Strings = (
      'SELECT A.*, A.ROWID FROM ALLOC A WHERE A.NALLOC = -1')
    CachedUpdates = True
    Left = 96
    Top = 30
  end
  object qryUpdateInvoice: TUniQuery
    Connection = InsightiTrackWatcher.uniInsight
    SQL.Strings = (
      'update'
      'invoice'
      'set '
      'LEGAL_CR_AMOUNT = :LEGAL_CR_AMOUNT,'
      'TRADE_CR_AMOUNT = :TRADE_CR_AMOUNT'
      'where'
      'ninvoice = :ninvoice'
      '')
    Left = 23
    Top = 81
    ParamData = <
      item
        DataType = ftUnknown
        Name = 'LEGAL_CR_AMOUNT'
        Value = nil
      end
      item
        DataType = ftUnknown
        Name = 'TRADE_CR_AMOUNT'
        Value = nil
      end
      item
        DataType = ftUnknown
        Name = 'ninvoice'
        Value = nil
      end>
  end
end
