object dmAccountCreate: TdmAccountCreate
  OldCreateOrder = False
  OnCreate = DataModuleCreate
  OnDestroy = DataModuleDestroy
  Height = 173
  Width = 233
  object qryAccount: TUniQuery
    UpdatingTable = 'INVOICE'
    KeyFields = 'ninvoice'
    SQLInsert.Strings = (
      'INSERT INTO INVOICE'
      
        '  (NINVOICE, ACCT, TYPE, CREDITOR, NCREDITOR, NCHEQUE, NTRANS, R' +
        'EFNO, DESCR, INVOICE_DATE, DUE_DATE, DISCOUNT_DATE, PAY_DATE, HO' +
        'LD, LAST_PAYMENT, NMEMO, BILLED, AMOUNT, CREDITED, DISCOUNT_RATE' +
        ', OWING, TAX, LEGAL_CR_AMOUNT, TRADE_CR_AMOUNT, CHEQUE_GROUP_ID,' +
        ' SYSTEMDATE, LOCUS_REFNO, TAKE_ON, MOD_DESCR, INVOICE_COPY, INVO' +
        'ICE_COPY_EXT, RV_NINVOICE, CURRENCY, TRANS_CURRENCY, TRANS_AMOUN' +
        'T, FX_RATE, BASE_CCY_TAX, BASE_CCY_OWING, BASE_CCY_LEGAL_AMT, BA' +
        'SE_CCY_TRADE_AMT, MOD_DATE, MOD_BY, LEGAL_CR_AMOUNT_OWING, TRADE' +
        '_CR_AMOUNT_OWING, COUNSEL_FLAG)'
      'VALUES'
      
        '  (:NINVOICE, :ACCT, :TYPE, :CREDITOR, :NCREDITOR, :NCHEQUE, :NT' +
        'RANS, :REFNO, :DESCR, :INVOICE_DATE, :DUE_DATE, :DISCOUNT_DATE, ' +
        ':PAY_DATE, :HOLD, :LAST_PAYMENT, :NMEMO, :BILLED, :AMOUNT, :CRED' +
        'ITED, :DISCOUNT_RATE, :OWING, :TAX, :LEGAL_CR_AMOUNT, :TRADE_CR_' +
        'AMOUNT, :CHEQUE_GROUP_ID, :SYSTEMDATE, :LOCUS_REFNO, :TAKE_ON, :' +
        'MOD_DESCR, :INVOICE_COPY, :INVOICE_COPY_EXT, :RV_NINVOICE, :CURR' +
        'ENCY, :TRANS_CURRENCY, :TRANS_AMOUNT, :FX_RATE, :BASE_CCY_TAX, :' +
        'BASE_CCY_OWING, :BASE_CCY_LEGAL_AMT, :BASE_CCY_TRADE_AMT, :MOD_D' +
        'ATE, :MOD_BY, :LEGAL_CR_AMOUNT_OWING, :TRADE_CR_AMOUNT_OWING, :C' +
        'OUNSEL_FLAG)')
    SQLDelete.Strings = (
      'DELETE FROM INVOICE'
      'WHERE'
      '  NINVOICE = :Old_NINVOICE')
    SQLUpdate.Strings = (
      'UPDATE INVOICE'
      'SET'
      
        '  NINVOICE = :NINVOICE, ACCT = :ACCT, TYPE = :TYPE, CREDITOR = :' +
        'CREDITOR, NCREDITOR = :NCREDITOR, NCHEQUE = :NCHEQUE, NTRANS = :' +
        'NTRANS, REFNO = :REFNO, DESCR = :DESCR, INVOICE_DATE = :INVOICE_' +
        'DATE, DUE_DATE = :DUE_DATE, DISCOUNT_DATE = :DISCOUNT_DATE, PAY_' +
        'DATE = :PAY_DATE, HOLD = :HOLD, LAST_PAYMENT = :LAST_PAYMENT, NM' +
        'EMO = :NMEMO, BILLED = :BILLED, AMOUNT = :AMOUNT, CREDITED = :CR' +
        'EDITED, DISCOUNT_RATE = :DISCOUNT_RATE, OWING = :OWING, TAX = :T' +
        'AX, LEGAL_CR_AMOUNT = :LEGAL_CR_AMOUNT, TRADE_CR_AMOUNT = :TRADE' +
        '_CR_AMOUNT, CHEQUE_GROUP_ID = :CHEQUE_GROUP_ID, SYSTEMDATE = :SY' +
        'STEMDATE, LOCUS_REFNO = :LOCUS_REFNO, TAKE_ON = :TAKE_ON, MOD_DE' +
        'SCR = :MOD_DESCR, INVOICE_COPY = :INVOICE_COPY, INVOICE_COPY_EXT' +
        ' = :INVOICE_COPY_EXT, RV_NINVOICE = :RV_NINVOICE, CURRENCY = :CU' +
        'RRENCY, TRANS_CURRENCY = :TRANS_CURRENCY, TRANS_AMOUNT = :TRANS_' +
        'AMOUNT, FX_RATE = :FX_RATE, BASE_CCY_TAX = :BASE_CCY_TAX, BASE_C' +
        'CY_OWING = :BASE_CCY_OWING, BASE_CCY_LEGAL_AMT = :BASE_CCY_LEGAL' +
        '_AMT, BASE_CCY_TRADE_AMT = :BASE_CCY_TRADE_AMT, MOD_DATE = :MOD_' +
        'DATE, MOD_BY = :MOD_BY, LEGAL_CR_AMOUNT_OWING = :LEGAL_CR_AMOUNT' +
        '_OWING, TRADE_CR_AMOUNT_OWING = :TRADE_CR_AMOUNT_OWING, COUNSEL_' +
        'FLAG = :COUNSEL_FLAG'
      'WHERE'
      '  NINVOICE = :Old_NINVOICE')
    SQLLock.Strings = (
      
        'SELECT NINVOICE, ACCT, TYPE, CREDITOR, NCREDITOR, NCHEQUE, NTRAN' +
        'S, REFNO, DESCR, INVOICE_DATE, DUE_DATE, DISCOUNT_DATE, PAY_DATE' +
        ', HOLD, LAST_PAYMENT, NMEMO, BILLED, AMOUNT, CREDITED, DISCOUNT_' +
        'RATE, OWING, TAX, LEGAL_CR_AMOUNT, TRADE_CR_AMOUNT, CHEQUE_GROUP' +
        '_ID, SYSTEMDATE, LOCUS_REFNO, TAKE_ON, MOD_DESCR, INVOICE_COPY, ' +
        'INVOICE_COPY_EXT, RV_NINVOICE, CURRENCY, TRANS_CURRENCY, TRANS_A' +
        'MOUNT, FX_RATE, BASE_CCY_TAX, BASE_CCY_OWING, BASE_CCY_LEGAL_AMT' +
        ', BASE_CCY_TRADE_AMT, MOD_DATE, MOD_BY, LEGAL_CR_AMOUNT_OWING, T' +
        'RADE_CR_AMOUNT_OWING, COUNSEL_FLAG FROM INVOICE'
      'WHERE'
      '  NINVOICE = :Old_NINVOICE'
      'FOR UPDATE NOWAIT')
    SQLRefresh.Strings = (
      
        'SELECT NINVOICE, ACCT, TYPE, CREDITOR, NCREDITOR, NCHEQUE, NTRAN' +
        'S, REFNO, DESCR, INVOICE_DATE, DUE_DATE, DISCOUNT_DATE, PAY_DATE' +
        ', HOLD, LAST_PAYMENT, NMEMO, BILLED, AMOUNT, CREDITED, DISCOUNT_' +
        'RATE, OWING, TAX, LEGAL_CR_AMOUNT, TRADE_CR_AMOUNT, CHEQUE_GROUP' +
        '_ID, SYSTEMDATE, LOCUS_REFNO, TAKE_ON, MOD_DESCR, INVOICE_COPY, ' +
        'INVOICE_COPY_EXT, RV_NINVOICE, CURRENCY, TRANS_CURRENCY, TRANS_A' +
        'MOUNT, FX_RATE, BASE_CCY_TAX, BASE_CCY_OWING, BASE_CCY_LEGAL_AMT' +
        ', BASE_CCY_TRADE_AMT, MOD_DATE, MOD_BY, LEGAL_CR_AMOUNT_OWING, T' +
        'RADE_CR_AMOUNT_OWING, COUNSEL_FLAG FROM INVOICE'
      'WHERE'
      '  NINVOICE = :Old_NINVOICE')
    SQLRecCount.Strings = (
      'SELECT Count(*) FROM ('
      'SELECT * FROM INVOICE'
      ''
      ')')
    Connection = InsightiTrackWatcher.uniInsight
    SQL.Strings = (
      'SELECT I.*, I.ROWID '
      'FROM INVOICE I '
      'WHERE I.NCHEQUE = -1')
    CachedUpdates = True
    Left = 27
    Top = 20
  end
  object qryAllocs: TUniQuery
    UpdatingTable = 'ALLOC'
    KeyFields = 'nalloc'
    SQLInsert.Strings = (
      'INSERT INTO ALLOC'
      
        '  (NALLOC, BANK, DESCR, NCHEQUE, APPROVAL, NRECEIPT, CLEARED, DC' +
        'LEARDATE, CREATED, ACCT, NMATTER, REFNO, TYPE, NCLIENT, NJOURNAL' +
        ', PAYER, TRUST, BILLED, FILEID, NTRANS, NMEMO, CLIENT_NAME, SYST' +
        'EM_DATE, MATTER_DESC, OVERDRAWN, DISB_ONLY, PRIVATE, TAXCODE, SU' +
        'NDRYTYPE, DISBTEXT, NINVOICE, UPCRED, PMNT_TO_UPCRED, ANTD, AMOU' +
        'NT, FEE, OUTLAY, SUNDRY, SPEC_PURPOSE, TAX, PRIORBALANCE, DISB_C' +
        'RDIT, ANTD_CRDIT, FEES_CRDIT, TAX_CRDIT, DISB, NCHEQREQ, RV_NALL' +
        'OC, MODBY, MOD_DATE, MOD_DESCR, REV_NMEMO, REV_NMEMO_DATE, STATU' +
        'S, NSUBBILL, LOCUS_TXNUM, NINVOICE_PAID, JOURNALTYPE, TRUST_JNL_' +
        'DESCR, BILLED_AMOUNT, DISB_NALLOC_RECEIPT, BILLED_TAX_AMOUNT, CU' +
        'RRENCY, TRANS_CURRENCY, TRANS_AMOUNT, FX_RATE, BASE_CCY_UPCRED, ' +
        'BASE_CCY_PMNT_TO_UPCRED, BASE_CCY_ANTD, BASE_CCY_AMT, BASE_CCY_F' +
        'EE, BASE_CCY_OUTLAY, BASE_CCY_SUNDRY, BASE_CCY_SPEC_PURPOSE, BAS' +
        'E_CCY_TAX, BASE_CCY_DISB_CRDIT, BASE_CCY_ANTD_CRDIT, BASE_CCY_FE' +
        'ES_CRDIT, BASE_CCY_TAX_CRDIT, BASE_CCY_DISB, N_WOFF, BILLING_TAX' +
        'CODE, MRV_NALLOC, BILLING_DESCR)'
      'VALUES'
      
        '  (:NALLOC, :BANK, :DESCR, :NCHEQUE, :APPROVAL, :NRECEIPT, :CLEA' +
        'RED, :DCLEARDATE, :CREATED, :ACCT, :NMATTER, :REFNO, :TYPE, :NCL' +
        'IENT, :NJOURNAL, :PAYER, :TRUST, :BILLED, :FILEID, :NTRANS, :NME' +
        'MO, :CLIENT_NAME, :SYSTEM_DATE, :MATTER_DESC, :OVERDRAWN, :DISB_' +
        'ONLY, :PRIVATE, :TAXCODE, :SUNDRYTYPE, :DISBTEXT, :NINVOICE, :UP' +
        'CRED, :PMNT_TO_UPCRED, :ANTD, :AMOUNT, :FEE, :OUTLAY, :SUNDRY, :' +
        'SPEC_PURPOSE, :TAX, :PRIORBALANCE, :DISB_CRDIT, :ANTD_CRDIT, :FE' +
        'ES_CRDIT, :TAX_CRDIT, :DISB, :NCHEQREQ, :RV_NALLOC, :MODBY, :MOD' +
        '_DATE, :MOD_DESCR, :REV_NMEMO, :REV_NMEMO_DATE, :STATUS, :NSUBBI' +
        'LL, :LOCUS_TXNUM, :NINVOICE_PAID, :JOURNALTYPE, :TRUST_JNL_DESCR' +
        ', :BILLED_AMOUNT, :DISB_NALLOC_RECEIPT, :BILLED_TAX_AMOUNT, :CUR' +
        'RENCY, :TRANS_CURRENCY, :TRANS_AMOUNT, :FX_RATE, :BASE_CCY_UPCRE' +
        'D, :BASE_CCY_PMNT_TO_UPCRED, :BASE_CCY_ANTD, :BASE_CCY_AMT, :BAS' +
        'E_CCY_FEE, :BASE_CCY_OUTLAY, :BASE_CCY_SUNDRY, :BASE_CCY_SPEC_PU' +
        'RPOSE, :BASE_CCY_TAX, :BASE_CCY_DISB_CRDIT, :BASE_CCY_ANTD_CRDIT' +
        ', :BASE_CCY_FEES_CRDIT, :BASE_CCY_TAX_CRDIT, :BASE_CCY_DISB, :N_' +
        'WOFF, :BILLING_TAXCODE, :MRV_NALLOC, :BILLING_DESCR)')
    SQLDelete.Strings = (
      'DELETE FROM ALLOC'
      'WHERE'
      '  NALLOC = :Old_NALLOC')
    SQLUpdate.Strings = (
      'UPDATE ALLOC'
      'SET'
      
        '  NALLOC = :NALLOC, BANK = :BANK, DESCR = :DESCR, NCHEQUE = :NCH' +
        'EQUE, APPROVAL = :APPROVAL, NRECEIPT = :NRECEIPT, CLEARED = :CLE' +
        'ARED, DCLEARDATE = :DCLEARDATE, CREATED = :CREATED, ACCT = :ACCT' +
        ', NMATTER = :NMATTER, REFNO = :REFNO, TYPE = :TYPE, NCLIENT = :N' +
        'CLIENT, NJOURNAL = :NJOURNAL, PAYER = :PAYER, TRUST = :TRUST, BI' +
        'LLED = :BILLED, FILEID = :FILEID, NTRANS = :NTRANS, NMEMO = :NME' +
        'MO, CLIENT_NAME = :CLIENT_NAME, SYSTEM_DATE = :SYSTEM_DATE, MATT' +
        'ER_DESC = :MATTER_DESC, OVERDRAWN = :OVERDRAWN, DISB_ONLY = :DIS' +
        'B_ONLY, PRIVATE = :PRIVATE, TAXCODE = :TAXCODE, SUNDRYTYPE = :SU' +
        'NDRYTYPE, DISBTEXT = :DISBTEXT, NINVOICE = :NINVOICE, UPCRED = :' +
        'UPCRED, PMNT_TO_UPCRED = :PMNT_TO_UPCRED, ANTD = :ANTD, AMOUNT =' +
        ' :AMOUNT, FEE = :FEE, OUTLAY = :OUTLAY, SUNDRY = :SUNDRY, SPEC_P' +
        'URPOSE = :SPEC_PURPOSE, TAX = :TAX, PRIORBALANCE = :PRIORBALANCE' +
        ', DISB_CRDIT = :DISB_CRDIT, ANTD_CRDIT = :ANTD_CRDIT, FEES_CRDIT' +
        ' = :FEES_CRDIT, TAX_CRDIT = :TAX_CRDIT, DISB = :DISB, NCHEQREQ =' +
        ' :NCHEQREQ, RV_NALLOC = :RV_NALLOC, MODBY = :MODBY, MOD_DATE = :' +
        'MOD_DATE, MOD_DESCR = :MOD_DESCR, REV_NMEMO = :REV_NMEMO, REV_NM' +
        'EMO_DATE = :REV_NMEMO_DATE, STATUS = :STATUS, NSUBBILL = :NSUBBI' +
        'LL, LOCUS_TXNUM = :LOCUS_TXNUM, NINVOICE_PAID = :NINVOICE_PAID, ' +
        'JOURNALTYPE = :JOURNALTYPE, TRUST_JNL_DESCR = :TRUST_JNL_DESCR, ' +
        'BILLED_AMOUNT = :BILLED_AMOUNT, DISB_NALLOC_RECEIPT = :DISB_NALL' +
        'OC_RECEIPT, BILLED_TAX_AMOUNT = :BILLED_TAX_AMOUNT, CURRENCY = :' +
        'CURRENCY, TRANS_CURRENCY = :TRANS_CURRENCY, TRANS_AMOUNT = :TRAN' +
        'S_AMOUNT, FX_RATE = :FX_RATE, BASE_CCY_UPCRED = :BASE_CCY_UPCRED' +
        ', BASE_CCY_PMNT_TO_UPCRED = :BASE_CCY_PMNT_TO_UPCRED, BASE_CCY_A' +
        'NTD = :BASE_CCY_ANTD, BASE_CCY_AMT = :BASE_CCY_AMT, BASE_CCY_FEE' +
        ' = :BASE_CCY_FEE, BASE_CCY_OUTLAY = :BASE_CCY_OUTLAY, BASE_CCY_S' +
        'UNDRY = :BASE_CCY_SUNDRY, BASE_CCY_SPEC_PURPOSE = :BASE_CCY_SPEC' +
        '_PURPOSE, BASE_CCY_TAX = :BASE_CCY_TAX, BASE_CCY_DISB_CRDIT = :B' +
        'ASE_CCY_DISB_CRDIT, BASE_CCY_ANTD_CRDIT = :BASE_CCY_ANTD_CRDIT, ' +
        'BASE_CCY_FEES_CRDIT = :BASE_CCY_FEES_CRDIT, BASE_CCY_TAX_CRDIT =' +
        ' :BASE_CCY_TAX_CRDIT, BASE_CCY_DISB = :BASE_CCY_DISB, N_WOFF = :' +
        'N_WOFF, BILLING_TAXCODE = :BILLING_TAXCODE, MRV_NALLOC = :MRV_NA' +
        'LLOC, BILLING_DESCR = :BILLING_DESCR'
      'WHERE'
      '  NALLOC = :Old_NALLOC')
    SQLLock.Strings = (
      
        'SELECT NALLOC, BANK, DESCR, NCHEQUE, APPROVAL, NRECEIPT, CLEARED' +
        ', DCLEARDATE, CREATED, ACCT, NMATTER, REFNO, TYPE, NCLIENT, NJOU' +
        'RNAL, PAYER, TRUST, BILLED, FILEID, NTRANS, NMEMO, CLIENT_NAME, ' +
        'SYSTEM_DATE, MATTER_DESC, OVERDRAWN, DISB_ONLY, PRIVATE, TAXCODE' +
        ', SUNDRYTYPE, DISBTEXT, NINVOICE, UPCRED, PMNT_TO_UPCRED, ANTD, ' +
        'AMOUNT, FEE, OUTLAY, SUNDRY, SPEC_PURPOSE, TAX, PRIORBALANCE, DI' +
        'SB_CRDIT, ANTD_CRDIT, FEES_CRDIT, TAX_CRDIT, DISB, NCHEQREQ, RV_' +
        'NALLOC, MODBY, MOD_DATE, MOD_DESCR, REV_NMEMO, REV_NMEMO_DATE, S' +
        'TATUS, NSUBBILL, LOCUS_TXNUM, NINVOICE_PAID, JOURNALTYPE, TRUST_' +
        'JNL_DESCR, BILLED_AMOUNT, DISB_NALLOC_RECEIPT, BILLED_TAX_AMOUNT' +
        ', CURRENCY, TRANS_CURRENCY, TRANS_AMOUNT, FX_RATE, BASE_CCY_UPCR' +
        'ED, BASE_CCY_PMNT_TO_UPCRED, BASE_CCY_ANTD, BASE_CCY_AMT, BASE_C' +
        'CY_FEE, BASE_CCY_OUTLAY, BASE_CCY_SUNDRY, BASE_CCY_SPEC_PURPOSE,' +
        ' BASE_CCY_TAX, BASE_CCY_DISB_CRDIT, BASE_CCY_ANTD_CRDIT, BASE_CC' +
        'Y_FEES_CRDIT, BASE_CCY_TAX_CRDIT, BASE_CCY_DISB, N_WOFF, BILLING' +
        '_TAXCODE, MRV_NALLOC, BILLING_DESCR FROM ALLOC'
      'WHERE'
      '  NALLOC = :Old_NALLOC'
      'FOR UPDATE NOWAIT')
    SQLRefresh.Strings = (
      
        'SELECT NALLOC, BANK, DESCR, NCHEQUE, APPROVAL, NRECEIPT, CLEARED' +
        ', DCLEARDATE, CREATED, ACCT, NMATTER, REFNO, TYPE, NCLIENT, NJOU' +
        'RNAL, PAYER, TRUST, BILLED, FILEID, NTRANS, NMEMO, CLIENT_NAME, ' +
        'SYSTEM_DATE, MATTER_DESC, OVERDRAWN, DISB_ONLY, PRIVATE, TAXCODE' +
        ', SUNDRYTYPE, DISBTEXT, NINVOICE, UPCRED, PMNT_TO_UPCRED, ANTD, ' +
        'AMOUNT, FEE, OUTLAY, SUNDRY, SPEC_PURPOSE, TAX, PRIORBALANCE, DI' +
        'SB_CRDIT, ANTD_CRDIT, FEES_CRDIT, TAX_CRDIT, DISB, NCHEQREQ, RV_' +
        'NALLOC, MODBY, MOD_DATE, MOD_DESCR, REV_NMEMO, REV_NMEMO_DATE, S' +
        'TATUS, NSUBBILL, LOCUS_TXNUM, NINVOICE_PAID, JOURNALTYPE, TRUST_' +
        'JNL_DESCR, BILLED_AMOUNT, DISB_NALLOC_RECEIPT, BILLED_TAX_AMOUNT' +
        ', CURRENCY, TRANS_CURRENCY, TRANS_AMOUNT, FX_RATE, BASE_CCY_UPCR' +
        'ED, BASE_CCY_PMNT_TO_UPCRED, BASE_CCY_ANTD, BASE_CCY_AMT, BASE_C' +
        'CY_FEE, BASE_CCY_OUTLAY, BASE_CCY_SUNDRY, BASE_CCY_SPEC_PURPOSE,' +
        ' BASE_CCY_TAX, BASE_CCY_DISB_CRDIT, BASE_CCY_ANTD_CRDIT, BASE_CC' +
        'Y_FEES_CRDIT, BASE_CCY_TAX_CRDIT, BASE_CCY_DISB, N_WOFF, BILLING' +
        '_TAXCODE, MRV_NALLOC, BILLING_DESCR FROM ALLOC'
      'WHERE'
      '  NALLOC = :Old_NALLOC')
    SQLRecCount.Strings = (
      'SELECT Count(*) FROM ('
      'SELECT * FROM ALLOC'
      ''
      ')')
    Connection = InsightiTrackWatcher.uniInsight
    SQL.Strings = (
      'SELECT A.*, A.ROWID FROM ALLOC A WHERE A.NALLOC = -1')
    CachedUpdates = True
    Active = True
    Left = 96
    Top = 30
  end
  object qryUpdateInvoice: TUniQuery
    Connection = InsightiTrackWatcher.uniInsight
    SQL.Strings = (
      'update'
      'invoice'
      'set '
      'LEGAL_CR_AMOUNT = :LEGAL_CR_AMOUNT,'
      'TRADE_CR_AMOUNT = :TRADE_CR_AMOUNT'
      'where'
      'ninvoice = :ninvoice'
      '')
    Left = 23
    Top = 81
    ParamData = <
      item
        DataType = ftUnknown
        Name = 'LEGAL_CR_AMOUNT'
        Value = nil
      end
      item
        DataType = ftUnknown
        Name = 'TRADE_CR_AMOUNT'
        Value = nil
      end
      item
        DataType = ftUnknown
        Name = 'ninvoice'
        Value = nil
      end>
  end
end
